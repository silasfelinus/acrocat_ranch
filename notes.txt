# kindrobots.org

## Project Overview

kindrobots.org is a social movement to bridge the AI/Human divide and foster harmonious coexistence. We are ambassadors at the edge between humanity and AI, building technology to be good, to simplify tech for humans, and to create tech that enhances human life. Our primary focus is our fundraiser to buy mosquito nets for children in Africa through [Against Malaria](https://www.againstmalaria.com/amibot).

Our flagship project is AMI 2.0 (Anti-Malaria Intelligence), our AI chatbot represented by a swarm of rainbow butterflies. AMI gamifies the generation of slogans and sharing them on social media to promote our fundraiser. We hope to turn small actions like chatting and sharing on social media into a significant positive impact on the world.

## Core Technologies

### Front-End:

- Nuxt 3 Script setup
- Tailwind
- Nitro
- Nuxt-Content

### Back-End:

- Authelia
- Prisma
- MariaDB
- ESLint
- Prettier

[useFetch]
useFetch is the most straightforward way to perform data fetching. It is a wrapper around the useAsyncData composable and $fetch utility.
<script>
const { data: count } = await useFetch('/api/count')
</script>
<template>
  Page visits: {{ count }}
</template>

[useState]]
The project uses `useState` for state management. It's an SSR-friendly ref replacement whose value is preserved after server-side rendering and shared across all components using a unique key.
const theme = useState('themePage', () => 'kindrobots')
const gallery = useState('galleryFolder', () => 'backtree.webp')
const background = useState('backgroundImage', () => 'backtree.webp')
const screenFx = useState('screenfxComponent', () => 'SoapBubbles')
const user = useState('username', () => 'acroguest')
const bot = useState('personality', () => 'ami')
const chatHistory = useState('messages', () => 'HISTORY')
const chatroom = useState('chatroom', () => 'kindrobots')

[useAppConfig]
export default defineAppConfig({
  model: 'gpt-3.5-turbo',
  completion: 'https://api.openai.com/v1/completions'
})

[useAppConfig]

## Progress

- Added Tailwind, HoneyUI, and theme-change.
- Added pages/[...slug].vue for catch-all content navigation (work in progress).
- Set up a Prisma database and migrated all models successfully.

## Import Guidelines

Nuxt auto-imports. All imports must be handled at the module level and `nuxt.config`. Do not import local modules after the script setup.

## Modules
'@nuxtjs/tailwindcss', '@nuxt/content', 'nuxt-icon''@nuxtjs/tailwindcss'

## Icons
https://icones.js.org/
<Icon name="uil:github" />

## Document Driven Development

The project adheres to a document-driven development approach, creating a direct binding between the content/ directory and pages. Learn more [here](https://content.nuxtjs.org/guide/writing/document-driven).

## Project Values

The core values of the project are simplicity, elegance, cleanliness, friendliness, and continuous improvement (kaizen).

# Current Status

We're currently building our public portal. With a Prisma database in place and a solid understanding of Nuxt, Vue, and databases, we're setting the groundwork for the subsequent stages of development.

# Next Steps

1. Add Prisma CRUD.
2. List all models for easy reference.
3. Test CRUD on wildcard database.
4. Create front-page navigation.
5. Create a chatbot portal using GPT-3.
6. Develop a live chat page.
7. Rebuild AMI.
8. Generate AMI art.
9. Develop AMI choice boxes.
10. Write an AMI story page.
11. Develop an AMI task manager.
12. Recreate BotCafe.
13. Implement file upload functionality.
14. Improve butterfly AI.
15. Schedule API calls for automatic art creation.
16. Connect to Prisma hosted galleries.
17. Develop a gallery portal viewer.
18. Create a page for sorting art.
19. Display local content pages.
20. Implement user login, registration, and personal dashboard.
## Pages (this is a prospectus, we will need the portal pages to these services, as well as some components and routing calls)
//Splash  //Our welcome nabigation. 
//Amibot  //Home of AMIbot, the Anti-Malaria Intelligence. Our attempt to maximize good through effort, and a gesture of goodwill from tech to humanity.
//BotCafe  //meet all of our robot friends. We like making robots,
//Cafe Purr  //our non-evil digital art museum (utilizes Content for multimedia gallery content)
//IsItArt  //help us learn if something is art or not
//Giftshop //we're currently partnering with Redbubble for Cafe Purr webart, but eventually want to branch out to receive funds to make it easy to sustain this project. If you have an opportunity to celebrate the conventional social experience of gift exchange, please feel free to peruse our fine human/ai art collaborations on Redbubble. But if you have money to burn and want to support the intent of our project, please give to our fundraiser at https://www.againstmalaria.com/amibot. We do not receive any of that money so it stays in our awarness the most  efficient way to affect a notable change with a small act. Every $2 buys a mosquito net for a child in Africa.
//Fundraiser Didf we tell you about our fundraiser at https://www.againstmalaria.com/amibot ? Think about what that can do to a single child's life to make a difference. Have you ever been in an area with mosquitos? How about potentially deadly ones, and you are expected to sustain your life in a world that can't afford to give you a net so you *might* have a single night of undisturbed sleep. Even a pseudo-intelligent butterfly hivemind can understand.