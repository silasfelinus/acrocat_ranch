---
## CodeNotes
[project]
kindrobots.org

[purpose]
social network portal and gamified tech interface to onramp people to the modern world.
encourage fundraising and donations to our fundraiser
impress people with my slick vue.js nuxt skills and attract virtuous projects and grants to sustain our cause(s)
sell print-on-demand swag in our giftshop
monetize our various projects and portals while staying on the side of good.

[front-end]
nuxt 3, script setup, tailwind, nitro, nuxt-content

[backend]
authelia, mariadb, eslint, prettier

[scope]
We are building the front-page navigation, and establishing a framework for the rest of the project as we work with images, state, users, galleries, clickables, and chat.


[useState]
useState is an SSR-friendly ref replacement. Its value will be preserved after server-side rendering (during client-side hydration) and shared across all components using a unique key.
Any other component that uses useState('{state}') shares the same reactive state. Help me build my useState directory.
const background = useState('backgroundImage', () => 'backtree.webp'}
const contentPage = useState('contentPage', () => '/kindrobots'}

[states]
backgroundImage
userName
screenfxComponent
statusText
activePage
activeTheme

[structure]
nuxt 3, setup script. typescript is inferred. auto-imports. Use error checking when relevant. useState for anything to be passed between components. This is meant to be a content-based project, but we need components for the razzle-dazzle, to simplify and develop navigation, and to handle state.

[Progress]
added tailwind, honeyui, and theme-change
removed pinia as it's no longer necessary thanks to useState

[Notes]
We have nav.json and simpleNav.json, with lists of id, title, and links. We need a drop-down that will read from the file(s), and update state when selected.
We need tp create a navDropdown, NavGallery, SplashNav, and AccordionNav that uses the data.
I'm trying to avoid a pages/ directory but I might need it. My hope was that nuxt/content would replace it, after wise use of my components/content and layouts directory. content lets us auto-route to each markdown file in content. The goal is an SEO powerhouse that loads lightning fast, and dynamically loads content based on markdown files that I can modify rapidly and easily.



[assets/]
The assets/ directory contains by convention every asset that you want the build tool (Vite or webpack) to process.

[public/]
The public/ directory content is served at the server root as-is.

[app.vue]
Nuxt will treat this file as the entrypoint and render its content for every route of the application.

[layout/]
https://nuxt.com/docs/guide/directory-structure/layouts
ContentLayout, PageLayout, PromptLayout, ArtLayout, SplashLayout


[content/components]
components in the content subdirectory are accessible by content

[imports]
nuxt auto-imports. All imports must be handled at the module level and nuxt.config. *DO NOT IMPORT AFTER SCIPT SETUP*

[nuxt.config.ts]
imports: content, tailwind
documentdriven: true

[DocumentDriven]
https://content.nuxtjs.org/guide/writing/document-driven
This mode creates a direct binding between the content/ directory and pages.
It also offers page, navigation, surround and globals variables.


[Values]
simple, elegant, clean, friendly




